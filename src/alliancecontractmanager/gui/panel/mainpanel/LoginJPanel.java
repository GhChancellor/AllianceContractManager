/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package alliancecontractmanager.gui.panel.mainpanel;

import alliancecontractmanager.db.entities.UserApiEntity;
import alliancecontractmanager.exception.KeyIdEmptyException;
import alliancecontractmanager.exception.KeyIdWrongException;
import alliancecontractmanager.exception.NameCharacterEmptyException;
import alliancecontractmanager.exception.VerificationCodeEmptyException;
import alliancecontractmanager.exception.VerificationCodeWrongException;
import alliancecontractmanager.logic.manager.ManagerLoginSql;
import java.beans.Beans;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;


/**
 * Se utente disabilitato in fase di avvio non lo trova e non lo aggiunge nella jlist
 * @author lele
 */
public class LoginJPanel extends javax.swing.JPanel {

    /**
     * Creates new form LoginJPanel
     */
    public LoginJPanel() {
        initComponents();
        if ( Beans.isDesignTime() ){
            List < UserApiEntity > apiEntitys = new ArrayList<>();
        }else{
            // aggiungere max caratteri per jTextFieldKeyID e jTextFieldVerificationCode
            this.jTextFieldKeyID.setText("");
            this.jTextFieldVerificationCodeValue.setText("");
            this.jTextFieldNameCharacter.setText("");
            
            // DBG
            initJlistApis();            
        }
    }

    /**
     * Init list api from db
     */
    public void initJlistApis(){
        List < UserApiEntity > userApiEntitys = 
         ManagerLoginSql.getInstance().getUserApiEntities();
        
        
        for (UserApiEntity apiEntity : userApiEntitys) {
            jListUserApiModel1.addElement(apiEntity);
        }

    }    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jListUserApiModel1 = new alliancecontractmanager.gui.mr.model.jlist.JListUserApiModel();
        jListUserApiRenderer1 = new alliancecontractmanager.gui.mr.renderer.jlist.JListUserApiRenderer();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldKeyID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldVerificationCodeValue = new javax.swing.JTextField();
        jButtonImport = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListUserApi = new javax.swing.JList<>();
        jTextFieldNameCharacter = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButtonDbg = new javax.swing.JButton();

        jListUserApiRenderer1.setText("jListUserApiRenderer1");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("KeyID");

        jLabel2.setText("Verification Code");

        jButtonImport.setText("Import");
        jButtonImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonImportActionPerformed(evt);
            }
        });

        jButtonDelete.setText("Delete");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jListUserApi.setModel(jListUserApiModel1);
        jListUserApi.setCellRenderer(jListUserApiRenderer1);
        jScrollPane1.setViewportView(jListUserApi);

        jLabel3.setText("Name Character");

        jButtonDbg.setText("Disable user");
        jButtonDbg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDbgActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE)
                    .addComponent(jTextFieldVerificationCodeValue)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButtonImport)
                                .addGap(30, 30, 30)
                                .addComponent(jButtonDelete))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldNameCharacter)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jTextFieldKeyID, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButtonDbg)))))
                        .addGap(0, 181, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldKeyID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNameCharacter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonDbg))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldVerificationCodeValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonImport)
                    .addComponent(jButtonDelete))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonImportActionPerformed
        
        try {
            // Da migliorare
            if ( this.jTextFieldNameCharacter.getText().isEmpty() ){
                throw new NameCharacterEmptyException();
            }

            if ( this.jTextFieldKeyID.getText().isEmpty() ){
                throw new KeyIdEmptyException();
            }
            
            if (this.jTextFieldVerificationCodeValue.getText().isEmpty()) {
                throw new VerificationCodeEmptyException();
            }
            // ---------------------------
            
            String keyIdValue = this.jTextFieldKeyID.getText();
            String verificationCodeValue = this.jTextFieldVerificationCodeValue.getText();
            String nameCharacher = this.jTextFieldNameCharacter.getText();
        
            if ( keyIdValue.length() != 7 ){
                throw new KeyIdWrongException();
            }
            
            if ( verificationCodeValue.length() != 64 ){
                throw new VerificationCodeWrongException();
            }

            UserApiEntity userApiEntity = 
             new UserApiEntity(keyIdValue, verificationCodeValue, nameCharacher, true);   


//            if ( ManagerLogin.getIstance().checkDuplication(login.getUrlKeyIdValue()) == true ){
//                throw new KeyIdExistsException();
//            }

            jListUserApiModel1.addElement(userApiEntity);

            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
           
    }//GEN-LAST:event_jButtonImportActionPerformed

    
    private void importDGB(java.awt.event.ActionEvent evt){
        List < UserApiEntity > userApiEntitys = addUserDBG();
        
        for (UserApiEntity userApiEntity : userApiEntitys) {
            jListUserApiModel1.addElement(userApiEntity); 
        }
    }
    
    private  List < UserApiEntity > addUserDBG(){
        List < UserApiEntity > apiEntitys = new ArrayList<>();
        UserApiEntity userApiEntity = new UserApiEntity("111", "222", "lele", true);
        apiEntitys.add(userApiEntity);
        
        UserApiEntity userApiEntity02 = new UserApiEntity("333", "444", "luca", true);
        apiEntitys.add(userApiEntity02);
        
        UserApiEntity userApiEntity03 = new UserApiEntity("555", "666", "lilo", true);
        apiEntitys.add(userApiEntity03);
        
        return apiEntitys;
    }
    
    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
                
        if ( ! jListUserApi.isSelectionEmpty() ){
            if ( !jListUserApiModel1.isEmpty() ){
                
                Integer yesNoOption = JOptionPane.showConfirmDialog(jButtonDelete, "Do you want delete it?", "Delete", JOptionPane.YES_NO_CANCEL_OPTION);
                if (yesNoOption == JOptionPane.YES_OPTION ){
                    
                    // get single Api User selected
                    UserApiEntity userApiEntity = (UserApiEntity) jListUserApi.getSelectedValue();
                    
                    // Remove a single Api User from DB
                    ManagerLoginSql.getInstance().deleteUserApi(userApiEntity);
                    
                    // Remove a single Api User from GUI
                    jListUserApiModel1.remove( jListUserApi.getSelectedIndex() );                                          
                }
            }else{
                JOptionPane.showMessageDialog(jButtonDelete, "There are not api", "Listi is emoty", JOptionPane.ERROR_MESSAGE);
            }            
        }
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonDbgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDbgActionPerformed
     

       if ( ! jListUserApi.isSelectionEmpty() || !jListUserApiModel1.isEmpty() ){
            Integer yesNoOption = JOptionPane.showConfirmDialog(jButtonDelete, "Do you want disable/enable it?", "Disable/Enable", JOptionPane.YES_NO_CANCEL_OPTION);
            if (yesNoOption == JOptionPane.YES_OPTION ){
                // get single Api User selected
                UserApiEntity userApiEntity = (UserApiEntity) jListUserApi.getSelectedValue();
                
                // disable or enable user and his contract
                if ( userApiEntity.isUserEnable() == true){
                    userApiEntity.setUserEnable(false);
                }else{
                    userApiEntity.setUserEnable(true);
                }
                
                ManagerLoginSql.getInstance().updateUserApiEntity(userApiEntity);
            }
       }
    }//GEN-LAST:event_jButtonDbgActionPerformed
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDbg;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonImport;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList<UserApiEntity> jListUserApi;
    private alliancecontractmanager.gui.mr.model.jlist.JListUserApiModel jListUserApiModel1;
    private alliancecontractmanager.gui.mr.renderer.jlist.JListUserApiRenderer jListUserApiRenderer1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldKeyID;
    private javax.swing.JTextField jTextFieldNameCharacter;
    private javax.swing.JTextField jTextFieldVerificationCodeValue;
    // End of variables declaration//GEN-END:variables
}
