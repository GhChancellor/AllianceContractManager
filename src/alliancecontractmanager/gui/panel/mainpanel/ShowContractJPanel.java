/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package alliancecontractmanager.gui.panel.mainpanel;

import alliancecontractmanager.db.entities.ContractEntity;
import alliancecontractmanager.db.entities.UserApiEntity;
import alliancecontractmanager.gui.logicgui.event.Listener;
import alliancecontractmanager.logic.enumname.StatusEnum;
import alliancecontractmanager.logic.manager.ManagerLoginSql;
import alliancecontractmanager.logic.manager.ManagerMicrimDB.ManagerSQLMicrimsDB;
import java.beans.Beans;
import java.util.ArrayList;
import java.util.List;


/**
 * @author lele
 */
public class ShowContractJPanel extends javax.swing.JPanel implements Listener{
    
    /**
     * Creates new form ShowContractJPanel
     */
    public ShowContractJPanel() {
        initComponents();
        if ( Beans.isDesignTime() ){
            // DBG Funziona?
            List < ContractEntity > contractEntitys = new ArrayList<>();
        }else{
//            if ( this.jComboBoxUser.getSelectedIndex() == -1 || 
//                 this.jComboBoxNameShip01.getSelectedIndex() == -1 ){
//                return;
//            }

//            initShowContractJPanel();
            initGuiShowContractJPanel();
        }
    }
    
    /**
     * init jComboBoxNameShip01 get name from DB
     */
    private void initShowContractJPanel(){
//        jComboBoxNameShip01Model1.initShipsName();
    }

    private void initGuiShowContractJPanel(){
//        ManagerDispatcher.getInstance().addDispatcher(this);
        this.jComboBoxStatusContract01.addItem(StatusEnum.ALL.getStatus());
        this.jComboBoxStatusContract01.addItem(StatusEnum.COMPLETED.getStatus());
        this.jComboBoxStatusContract01.addItem(StatusEnum.OUTSTADING.getStatus());
        this.jComboBoxStatusContract01.addItem(StatusEnum.EXPIRED.getStatus());
        
        this.jComboBoxUser.setSelectedIndex(0);
        this.jComboBoxNameShip01.setSelectedIndex(0);
        this.jComboBoxStatusContract01.setSelectedIndex(0);       
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBoxNameShipRenderer011 = new alliancecontractmanager.gui.mr.renderer.jcombobox.JComboBoxNameShipRenderer();
        jComboBoxNameShip01Model1 = new alliancecontractmanager.gui.mr.model.JComboBox.JComboBoxNameShip01Model();
        jTableShowContractModel1 = new alliancecontractmanager.gui.mr.model.jtable.JTableShowContractModel();
        jComboBoxUserModel1 = new alliancecontractmanager.gui.mr.model.JComboBox.JComboBoxUserModel();
        jComboBoxUserRenderer1 = new alliancecontractmanager.gui.mr.renderer.jcombobox.JComboBoxUserRenderer();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTableShowContract = new javax.swing.JTable();
        jComboBoxNameShip01 = new javax.swing.JComboBox<>();
        jComboBoxStatusContract01 = new javax.swing.JComboBox<>();
        jButtonDeleteExpired = new javax.swing.JButton();
        jComboBoxUser = new javax.swing.JComboBox<>();
        jButtonAggiornamento = new javax.swing.JButton();

        jComboBoxNameShipRenderer011.setText("jComboBoxNameShipRenderer011");

        jComboBoxUserRenderer1.setText("jComboBoxUserRenderer1");

        setBackground(new java.awt.Color(255, 102, 102));

        jPanel1.setBackground(new java.awt.Color(102, 255, 102));

        JTableShowContract.setModel(jTableShowContractModel1);
        jScrollPane1.setViewportView(JTableShowContract);
        if (JTableShowContract.getColumnModel().getColumnCount() > 0) {
            JTableShowContract.getColumnModel().getColumn(0).setHeaderValue("Contract ID");
            JTableShowContract.getColumnModel().getColumn(1).setHeaderValue("Status Contract");
            JTableShowContract.getColumnModel().getColumn(2).setHeaderValue("Title");
            JTableShowContract.getColumnModel().getColumn(3).setHeaderValue("Sell Price");
            JTableShowContract.getColumnModel().getColumn(4).setHeaderValue("Buy price");
            JTableShowContract.getColumnModel().getColumn(5).setHeaderValue("Date Issued");
            JTableShowContract.getColumnModel().getColumn(6).setHeaderValue("Date Completed");
        }

        jComboBoxNameShip01.setModel(jComboBoxNameShip01Model1);
        jComboBoxNameShip01.setRenderer(jComboBoxNameShipRenderer011);
        jComboBoxNameShip01.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxNameShip01ActionPerformed(evt);
            }
        });

        jComboBoxStatusContract01.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxStatusContract01ActionPerformed(evt);
            }
        });

        jButtonDeleteExpired.setText("Delete");
        jButtonDeleteExpired.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonDeleteExpiredMouseClicked(evt);
            }
        });

        jComboBoxUser.setModel(jComboBoxUserModel1);
        jComboBoxUser.setRenderer(jComboBoxUserRenderer1);
        jComboBoxUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxUserActionPerformed(evt);
            }
        });

        jButtonAggiornamento.setText("DBG aggiornamento");
        jButtonAggiornamento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonAggiornamentoMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 918, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBoxUser, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(jComboBoxNameShip01, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jComboBoxStatusContract01, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonDeleteExpired, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonAggiornamento)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxNameShip01, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxStatusContract01, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonDeleteExpired)
                    .addComponent(jComboBoxUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAggiornamento))
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    
    private void jComboBoxNameShip01ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxNameShip01ActionPerformed
        if ( jComboBoxNameShip01.getItemCount() == 0 ){
            return;
        }
        
        int selectedUserIndex = jComboBoxUser.getSelectedIndex();
        int selectedNameShipIndex = jComboBoxNameShip01.getSelectedIndex();
        
        if ( selectedNameShipIndex == -1 || selectedUserIndex == -1 ){
            return;
        }        
         
        UserApiEntity userApiEntity = jComboBoxUser.getItemAt(selectedUserIndex);      
        ContractEntity contractEntity = jComboBoxNameShip01.getItemAt(selectedNameShipIndex);
        
        // show status contract like " all "
        jComboBoxStatusContract01.setSelectedIndex(0);
               
        List < ContractEntity > userContractByTitleContracts = 
         ManagerSQLMicrimsDB.getInstance().getUserContractsByTitle(userApiEntity, contractEntity);

        writeValueToTable(userContractByTitleContracts);

    }//GEN-LAST:event_jComboBoxNameShip01ActionPerformed
    
    private void jComboBoxStatusContract01ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxStatusContract01ActionPerformed
        if ( jComboBoxNameShip01.getSelectedIndex() == -1 
            || jComboBoxNameShip01.getItemCount() == 0 ){
            return;
        }

        int selectStatusContract = this.jComboBoxStatusContract01.getSelectedIndex();
        UserApiEntity userApiEntity = (UserApiEntity) jComboBoxUser.getSelectedItem();
        
        ContractEntity contractEntity = new ContractEntity();       
        
        contractEntity.setTitle( ((ContractEntity)jComboBoxNameShip01.getSelectedItem()).getTitle());

        List < ContractEntity > contractEntitys = null;               
        this.jButtonDeleteExpired.setVisible(false);

        if ( jComboBoxStatusContract01.getSelectedItem().toString().equals(StatusEnum.EXPIRED.getStatus() ) ){
            this.jButtonDeleteExpired.setVisible(true);
        }        
        
        if ( selectStatusContract == 0){
            contractEntitys = 
             ManagerSQLMicrimsDB.getInstance().getUserContractsByTitle(userApiEntity,contractEntity);
        }else{
            contractEntity.setStatusContract( jComboBoxStatusContract01.getSelectedItem().toString() );
            contractEntitys = 
             ManagerSQLMicrimsDB.getInstance().getUserContractsByTitleStatus(userApiEntity, contractEntity);            
        }

        writeValueToTable(contractEntitys);   
    }//GEN-LAST:event_jComboBoxStatusContract01ActionPerformed
    
    /**   
     * Write Value To jTable in ShowContractJPanel
     * @param contractEntity 
     */
    private void writeValueToTable( List < ContractEntity > contractEntityTitles ){
        jTableShowContractModel1.clear();
        
        for (ContractEntity contractEntity : contractEntityTitles) {
            jTableShowContractModel1.addContract(contractEntity);        
        }
    }     
    
    /**
     * Delete selected contract expired
     * @param evt 
     */
    private void jButtonDeleteExpiredMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonDeleteExpiredMouseClicked
        
        UserApiEntity apiEntity = (UserApiEntity) jComboBoxUser.getSelectedItem();
        
        int row = JTableShowContract.getSelectedRow();
        
        ContractEntity contractEntity = (ContractEntity) jTableShowContractModel1.getContract(row);
        ManagerSQLMicrimsDB.getInstance().deleteContract(apiEntity, contractEntity);

        jTableShowContractModel1.removeElement(row);
    }//GEN-LAST:event_jButtonDeleteExpiredMouseClicked

    private void jComboBoxUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxUserActionPerformed

        if ( jComboBoxUser.getSelectedIndex() == -1)
            return;
        
        UserApiEntity userApiEntity = (UserApiEntity) jComboBoxUser.getSelectedItem();
        
       jComboBoxNameShip01Model1.removeAllElements();
       jTableShowContractModel1.clear();
       
       int selectedUserIndex = jComboBoxUser.getSelectedIndex();
       
       ContractEntity contractEntity = new ContractEntity();
               
        if ( jComboBoxNameShip01.getSelectedIndex() == -1 ) {
            String titleContract = userApiEntity.getAllContractEntitys().get(0).getTitle();
            contractEntity.setTitle(titleContract);
        }else{
            contractEntity.setTitle(jComboBoxNameShip01.getSelectedItem().toString() );
        }               

        List < ContractEntity > contractEntitys = ManagerSQLMicrimsDB.getInstance().getUserContracts(userApiEntity);
        jComboBoxNameShip01Model1.addElements(contractEntitys,1);
        
        if (jComboBoxStatusContract01.getSelectedIndex() == 0 ){
            contractEntitys = ManagerSQLMicrimsDB.getInstance().getUserContractsByTitle(userApiEntity, contractEntity);
        }else{
            contractEntity.setStatusContract(jComboBoxStatusContract01.getSelectedItem().toString());
            contractEntitys = ManagerSQLMicrimsDB.getInstance().getUserContractsByTitleStatus(userApiEntity, contractEntity);            
        }

        writeValueToTable(contractEntitys);  
             
    }//GEN-LAST:event_jComboBoxUserActionPerformed

    private void jButtonAggiornamentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonAggiornamentoMouseClicked
        System.out.println("");
        
        List < UserApiEntity > userApiEntitys = 
         ManagerLoginSql.getInstance().getUserApiEntities();

        jComboBoxUserModel1.removeAllElements();

        
        // DBG questa parte è copiata da jComboBoxUserActionPerformed correggere
        
        for (UserApiEntity userApiEntity : userApiEntitys) {
            jComboBoxUserModel1.addElement(userApiEntity);
        }

        UserApiEntity userApiEntity = (UserApiEntity) jComboBoxUser.getItemAt(0);
        
       jComboBoxNameShip01Model1.removeAllElements();
       jTableShowContractModel1.clear();
       
       int selectedUserIndex = jComboBoxUser.getSelectedIndex();
       
       ContractEntity contractEntity = new ContractEntity();
               
        if ( jComboBoxNameShip01.getSelectedIndex() == -1 ) {
            String titleContract = userApiEntity.getAllContractEntitys().get(0).getTitle();
            contractEntity.setTitle(titleContract);
        }else{
            contractEntity.setTitle(jComboBoxNameShip01.getSelectedItem().toString() );
        }               

        List < ContractEntity > contractEntitys = ManagerSQLMicrimsDB.getInstance().getUserContracts(userApiEntity);
        jComboBoxNameShip01Model1.addElements(contractEntitys,1);
        
        if (jComboBoxStatusContract01.getSelectedIndex() == 0 ){
            contractEntitys = ManagerSQLMicrimsDB.getInstance().getUserContractsByTitle(userApiEntity, contractEntity);
        }else{
            contractEntity.setStatusContract(jComboBoxStatusContract01.getSelectedItem().toString());
            contractEntitys = ManagerSQLMicrimsDB.getInstance().getUserContractsByTitleStatus(userApiEntity, contractEntity);            
        }

        writeValueToTable(contractEntitys);  
    }//GEN-LAST:event_jButtonAggiornamentoMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable JTableShowContract;
    private javax.swing.JButton jButtonAggiornamento;
    private javax.swing.JButton jButtonDeleteExpired;
    private javax.swing.JComboBox<ContractEntity> jComboBoxNameShip01;
    private alliancecontractmanager.gui.mr.model.JComboBox.JComboBoxNameShip01Model jComboBoxNameShip01Model1;
    private alliancecontractmanager.gui.mr.renderer.jcombobox.JComboBoxNameShipRenderer jComboBoxNameShipRenderer011;
    private javax.swing.JComboBox<String> jComboBoxStatusContract01;
    private javax.swing.JComboBox<UserApiEntity> jComboBoxUser;
    private alliancecontractmanager.gui.mr.model.JComboBox.JComboBoxUserModel jComboBoxUserModel1;
    private alliancecontractmanager.gui.mr.renderer.jcombobox.JComboBoxUserRenderer jComboBoxUserRenderer1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private alliancecontractmanager.gui.mr.model.jtable.JTableShowContractModel jTableShowContractModel1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void updateGui(UserApiEntity userApiEntity) {
       
    }
}
